@model Enterprises.CMS.News.Dto.NewsCreateInput
@{
    Layout = "../Shared/_Layout.cshtml";
    ViewBag.ActiveMenu = "新闻公共管理";
}

<div id="content-header">
    <div id="breadcrumb"> <a href="#" title="Go to Home" class="tip-bottom"><i class="icon-home"></i> 首页</a> <a href="#" class="current">新闻公告管理</a> </div>
    <h1>新闻公告管理-新增</h1>
</div>
<div class="container-fluid">
    <hr>
    <div class="row-fluid">
        @using (Html.BeginForm("Create", "News", FormMethod.Post, new { @class = "form-horizontal", id = "saveForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(p=>p.ThumbMediaId)
            <div class="control-group">
                <label class="control-label">新闻主题 :</label>
                <div class="controls">
                    @Html.TextBoxFor(p => p.Title, new { @class = "span4", placeholder = "新闻主题" })
                    <span class="help-inline">@Html.ValidationMessageFor(p => p.Title)</span>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">摘要 :</label>
                <div class="controls">
                    @Html.TextBoxFor(p => p.Digest, new { @class = "span4", placeholder = "图文消息的摘要" })
                    <span class="help-inline">@Html.ValidationMessageFor(p => p.Digest)</span>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">所属类型 :</label>
                <div class="controls">
                    @Html.DropDownListFor(p => p.NewsTypeId, Model.DdlTypeItems, new { @class = "span4" })
                    <span class="help-inline">@Html.ValidationMessageFor(p => p.Author)</span>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">作者 :</label>
                <div class="controls" id="dropzoneForm">
                    @Html.TextBoxFor(p => p.Author, new { @class = "span4", placeholder = "作者" })
                    <span class="help-inline">@Html.ValidationMessageFor(p => p.Author)</span>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">内容 :</label>
                <div class="controls">
                    @Html.TextBoxFor(p => p.Content, new { @class = "span4", placeholder = "内容" })
                    <span class="help-inline">@Html.ValidationMessageFor(p => p.Content)</span>
                </div>
            </div>
            /*
            <div class="control-group">
                <label class="control-label">封面图片素材 :</label>
                <div class="controls">
                    @Html.HiddenFor(model => model.ThumbMediaId)
                    <span class="btn btn-success fileinput-button">
                        <i class="glyphicon glyphicon-plus"></i>
                        <span>添加图片</span>
                        <!-- The file input field used as target for the file upload widget -->
                        <input id="fileupload" type="file" name="files" multiple>
                    </span>
                    <span class="help-inline">@Html.ValidationMessageFor(p => p.ThumbMediaId)</span>
                </div>
            </div>*/
            <div class="control-group">
                <label class="control-label">封面图片素材 :</label>
                <div class="controls ">
                    <div class="dropzone span4" id="dropzoneForm">
                        
                    </div>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">是否显示封面 :</label>
                <div class="controls">
                    @Html.TextBoxFor(p => p.ShowCoverPic, new { @class = "span4", placeholder = "是否显示封面" })
                    <span class="help-inline">@Html.ValidationMessageFor(p => p.ShowCoverPic)</span>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">是否允许评论 :</label>
                <div class="controls">
                    @Html.TextBoxFor(p => p.NeedOpenComment, new { @class = "span4", placeholder = "是否打开评论，是打开，否不打开" })
                    <span class="help-inline">@Html.ValidationMessageFor(p => p.NeedOpenComment)</span>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">所有人可以评论:</label>
                <div class="controls">
                    @Html.TextBoxFor(p => p.OnlyFansCanComment, new { @class = "span4", placeholder = "所有人可以评论，是，所有人可评论，否，仅粉丝才可评论" })
                    <span class="help-inline">@Html.ValidationMessageFor(p => p.OnlyFansCanComment)</span>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">原文连接 :</label>
                <div class="controls">
                    @Html.TextBoxFor(p => p.ContentSourceUrl, new { @class = "span4", placeholder = "原文连接" })
                    <span class="help-inline">@Html.ValidationMessageFor(p => p.ContentSourceUrl)</span>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">排序顺序 :</label>
                <div class="controls">
                    @Html.TextBoxFor(p => p.SortOrder, new { @class = "span4", placeholder = "排序顺序" })
                    <span class="help-inline">@Html.ValidationMessageFor(p => p.SortOrder)</span>
                </div>
            </div>

            <div class="control-group">
                <label class="control-label"></label>
                <div class="controls">
                    <a id="btSave" class="btn btn-primary" href="#">确定</a>
                    <a data-dismiss="modal" class="btn btn-inverse" href="#">取消</a>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts{
    <script type="text/javascript">
        //File Upload response from the server
        Dropzone.options.dropzoneForm = {
            maxFiles: 2,
            url: "@Href("~/Files/ImgUpload")",
            acceptedFiles: "image/*",
            addRemoveLinks: true,
            previewTemplate:"<div class=\"dz-preview dz-file-preview\">\n  <div class=\"dz-image\"><img data-dz-thumbnail /></div>\n  <div class=\"dz-details\">\n <div class=\"dz-size\"><span data-dz-size></span></div>\n  <div class=\"dz-filename\"><span data-dz-name></span></div>\n  </div>\n </div>",
            dictRemoveFile: "删除",
            dictMaxFilesExceeded: "上传文件超过最大限制",
            dictDefaultMessage: "上传封面图片",
            dictFileTooBig: "文件大小超过限制",
            dictCancelUpload: "取消上传",
            dictCancelUploadConfirmation: "确定取消吗",
            dictInvalidInputType:"文件扩展名不符合规则",
            sending: function(file, xhr, formData) {
                formData.append("fileSize", file.size);
                formData.append("fileName", file.name);
                formData.append("folderId", '@Model.ThumbMediaId');
            },
           
            init: function() {
                this.on("removedfile",
                    function(data) {
                        this.enable();
                    });
                this.on("complete",
                    function(data) {
                        if (data.status !== "success") {
                            this.removeFile(data);
                        }

                        if (this.files.length >= 2) {
                            this.disable();
                        }
                    });

            }
        };
    </script>
}